
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Textarea } from '@/components/ui/textarea';
import { assessMedicalSpecialty } from '@/utils/healthCalculations';
import { MedicalSpecialtyResult } from '@/types/healthTools';

const MedicalSpecialtyGuide = () => {
  const [formData, setFormData] = useState({
    primarySymptom: '',
    duration: '',
    severity: '',
    bodyPart: '',
    additionalSymptoms: '',
    age: '',
    medicalHistory: ''
  });
  const [result, setResult] = useState<MedicalSpecialtyResult | null>(null);

  const handleCalculate = () => {
    if (!formData.primarySymptom || !formData.duration || !formData.severity) {
      alert('ูุฑุฌู ุฅุฏุฎุงู ุงูุฃุนุฑุงุถ ุงูุฃุณุงุณูุฉ ูุงููุฏุฉ ูุงูุดุฏุฉ ุนูู ุงูุฃูู');
      return;
    }

    const calculatedResult = assessMedicalSpecialty(formData);
    setResult(calculatedResult);
  };

  const getUrgencyColor = (urgency: string) => {
    switch (urgency) {
      case 'emergency': return 'text-red-600';
      case 'high': return 'text-orange-600';
      case 'moderate': return 'text-yellow-600';
      case 'low': return 'text-green-600';
      default: return 'text-gray-600';
    }
  };

  const getUrgencyBgColor = (urgency: string) => {
    switch (urgency) {
      case 'emergency': return 'bg-red-50 border-red-200';
      case 'high': return 'bg-orange-50 border-orange-200';
      case 'moderate': return 'bg-yellow-50 border-yellow-200';
      case 'low': return 'bg-green-50 border-green-200';
      default: return 'bg-gray-50 border-gray-200';
    }
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="text-xl text-right">ูุฑุดุฏ ุงูุชุฎุตุตุงุช ุงูุทุจูุฉ</CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="grid md:grid-cols-2 gap-4">
            <div className="space-y-2">
              <Label className="text-right block">ุงูุนุฑุถ ุงูุฑุฆูุณู</Label>
              <Select value={formData.primarySymptom} onValueChange={(value) => setFormData({ ...formData, primarySymptom: value })}>
                <SelectTrigger>
                  <SelectValue placeholder="ุงุฎุชุฑ ุงูุนุฑุถ ุงูุฑุฆูุณู" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="pain">ุฃูู</SelectItem>
                  <SelectItem value="fever">ุญูู</SelectItem>
                  <SelectItem value="breathing">ุตุนูุจุฉ ุชููุณ</SelectItem>
                  <SelectItem value="headache">ุตุฏุงุน</SelectItem>
                  <SelectItem value="digestive">ูุดุงูู ูุถููุฉ</SelectItem>
                  <SelectItem value="skin">ูุดุงูู ุฌูุฏูุฉ</SelectItem>
                  <SelectItem value="vision">ูุดุงูู ุจุตุฑูุฉ</SelectItem>
                  <SelectItem value="hearing">ูุดุงูู ุณูุนูุฉ</SelectItem>
                  <SelectItem value="mental">ุฃุนุฑุงุถ ููุณูุฉ</SelectItem>
                  <SelectItem value="other">ุฃุฎุฑู</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div className="space-y-2">
              <Label className="text-right block">ูุฏุฉ ุงูุฃุนุฑุงุถ</Label>
              <Select value={formData.duration} onValueChange={(value) => setFormData({ ...formData, duration: value })}>
                <SelectTrigger>
                  <SelectValue placeholder="ููุฐ ูุชู ุจุฏุฃุช ุงูุฃุนุฑุงุถ" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="hours">ุณุงุนุงุช ููููุฉ</SelectItem>
                  <SelectItem value="days">ุฃูุงู ููููุฉ</SelectItem>
                  <SelectItem value="weeks">ุฃุณุงุจูุน</SelectItem>
                  <SelectItem value="months">ุฃุดูุฑ</SelectItem>
                  <SelectItem value="chronic">ูุฒููุฉ (ุฃูุซุฑ ูู ุณูุฉ)</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div className="space-y-2">
              <Label className="text-right block">ุดุฏุฉ ุงูุฃุนุฑุงุถ</Label>
              <Select value={formData.severity} onValueChange={(value) => setFormData({ ...formData, severity: value })}>
                <SelectTrigger>
                  <SelectValue placeholder="ูุณุชูู ุงูุฃูู ุฃู ุงูุฅุฒุนุงุฌ" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="mild">ุฎููู</SelectItem>
                  <SelectItem value="moderate">ูุชูุณุท</SelectItem>
                  <SelectItem value="severe">ุดุฏูุฏ</SelectItem>
                  <SelectItem value="unbearable">ูุง ููุญุชูู</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div className="space-y-2">
              <Label className="text-right block">ุงูููุทูุฉ ุงููุตุงุจุฉ</Label>
              <Select value={formData.bodyPart} onValueChange={(value) => setFormData({ ...formData, bodyPart: value })}>
                <SelectTrigger>
                  <SelectValue placeholder="ุฃูู ุชุดุนุฑ ุจุงูุฃุนุฑุงุถ" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="head">ุงูุฑุฃุณ</SelectItem>
                  <SelectItem value="chest">ุงูุตุฏุฑ</SelectItem>
                  <SelectItem value="abdomen">ุงูุจุทู</SelectItem>
                  <SelectItem value="back">ุงูุธูุฑ</SelectItem>
                  <SelectItem value="extremities">ุงูุฃุทุฑุงู</SelectItem>
                  <SelectItem value="joints">ุงูููุงุตู</SelectItem>
                  <SelectItem value="skin">ุงูุฌูุฏ</SelectItem>
                  <SelectItem value="general">ุนุงู ูู ุงูุฌุณู</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
          
          <div className="space-y-2">
            <Label htmlFor="additionalSymptoms" className="text-right block">ุฃุนุฑุงุถ ุฅุถุงููุฉ</Label>
            <Textarea
              id="additionalSymptoms"
              placeholder="ุงุฐูุฑ ุฃู ุฃุนุฑุงุถ ุฃุฎุฑู ุชุดุนุฑ ุจูุง..."
              value={formData.additionalSymptoms}
              onChange={(e) => setFormData({ ...formData, additionalSymptoms: e.target.value })}
              className="text-right"
            />
          </div>

          <Button onClick={handleCalculate} className="w-full bg-brand hover:bg-brand-dark">
            ุงุญุตู ุนูู ุงูุชูุฌูู ุงูุทุจู
          </Button>
        </CardContent>
      </Card>

      {result && (
        <Card className="border-2 border-brand/20">
          <CardHeader>
            <CardTitle className="text-xl text-center text-brand">ุงูุชูุฌูู ุงูุทุจู ุงูููุงุณุจ</CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className={`p-6 rounded-lg border-2 ${getUrgencyBgColor(result.urgency)}`}>
              <div className="text-center">
                <div className={`text-2xl font-bold ${getUrgencyColor(result.urgency)} mb-2`}>
                  {result.recommendedSpecialty}
                </div>
                <div className="text-lg text-gray-700">{result.reasoning}</div>
              </div>
            </div>

            {result.urgency === 'emergency' && (
              <div className="p-4 bg-red-50 border border-red-200 rounded-lg">
                <p className="text-red-800 font-bold text-center">
                  ๐จ ุญุงูุฉ ุทุงุฑุฆุฉ - ุชูุฌู ููุฑุงู ูุฃูุฑุจ ูุณุชุดูู ุฃู ุงุชุตู ุจุงูุฅุณุนุงู
                </p>
              </div>
            )}

            <div className="space-y-3">
              <h4 className="font-bold text-gray-900">ุฃุณุฆูุฉ ูููุฉ ููุทุจูุจ:</h4>
              <ul className="space-y-2">
                {result.questionsForDoctor.map((question, index) => (
                  <li key={index} className="flex items-start">
                    <span className="text-brand ml-2">โ</span>
                    <span className="text-gray-700">{question}</span>
                  </li>
                ))}
              </ul>
            </div>

            {result.firstAid && result.firstAid.length > 0 && (
              <div className="space-y-3">
                <h4 className="font-bold text-gray-900">ุฅุณุนุงูุงุช ุฃูููุฉ ููุฑูุฉ:</h4>
                <ul className="space-y-2">
                  {result.firstAid.map((aid, index) => (
                    <li key={index} className="flex items-start">
                      <span className="text-red-600 ml-2">๐ฉน</span>
                      <span className="text-gray-700">{aid}</span>
                    </li>
                  ))}
                </ul>
              </div>
            )}

            <div className="p-4 bg-blue-50 border border-blue-200 rounded-lg">
              <h5 className="font-bold text-blue-900 mb-2">ูุตุงุฆุญ ูููุฉ:</h5>
              <ul className="text-blue-800 text-sm space-y-1">
                <li>โข ูุฐุง ุงูุชูุฌูู ูููุณุงุนุฏุฉ ููุท ูููุณ ุชุดุฎูุตุงู ุทุจูุงู</li>
                <li>โข ุงุญุถุฑ ูุนู ูุงุฆูุฉ ุจุงูุฃุฏููุฉ ุงูุชู ุชุชูุงูููุง</li>
                <li>โข ุงูุชุจ ุงูุฃุนุฑุงุถ ููุชู ุจุฏุฃุช</li>
                <li>โข ูุง ุชุชุฑุฏุฏ ูู ุทูุจ ุฑุฃู ุซุงูู ุฅุฐุง ูุฒู ุงูุฃูุฑ</li>
              </ul>
            </div>

            <Button 
              onClick={() => setResult(null)} 
              className="w-full bg-brand hover:bg-brand-dark"
            >
              ุงุณุชุดุงุฑุฉ ุฌุฏูุฏุฉ
            </Button>
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default MedicalSpecialtyGuide;
